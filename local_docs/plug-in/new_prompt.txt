Task: Create Comprehensive Documentation for Expanding the Eliza Framework

Context:
We are creating detailed documentation for expanding and customizing the Eliza framework (https://github.com/ai16z/eliza.git). This documentation will serve as a complete guide for developers who want to extend the framework's functionality.

Important Instructions:
1. First, examine the existing documentation in:
   - local_docs/eliza_doc_small.txt
   - local_docs/eliza_guide_llm.md
   These files contain crucial information about the framework's architecture and current capabilities.

2. Focus Areas:
   - Plugin System Architecture
   - Memory Management
   - Client Integration
   - Custom Actions and Providers
   - Testing and Validation
   - Security Best Practices
   - Performance Optimization
   - Deployment Strategies

3. Documentation Structure:
   - Technical Overview
   - Implementation Guidelines
   - API References
   - Code Examples
   - Best Practices
   - Troubleshooting Guide

4. Special Requirements:
   - Include practical code examples
   - Provide clear architecture diagrams
   - Document security considerations
   - Include performance optimization guidelines
   - Add testing strategies

AI Instructions:
1. Start by asking to examine the contents of the local documentation files to understand the current framework structure.
2. Request any specific information needed about current implementation details or requirements.
3. Propose documentation sections based on the examined content.
4. Create detailed, practical examples for each section.
5. Focus on making the documentation developer-friendly and comprehensive.

Expected Deliverables:
1. Complete markdown documentation
2. Code examples in TypeScript
3. Architecture diagrams
4. Testing templates
5. Security guidelines
6. Performance optimization strategies

Please start by examining the local documentation files and asking any clarifying questions about the framework's current implementation.

---

Task: Debug and Improve PostgreSQL Database Adapter Implementation

Context:
We are working on debugging and improving the PostgreSQL database adapter (PostgresDatabaseAdapterV2) for the Eliza framework. This adapter implements the IDatabaseAdapter interface and needs to be thoroughly reviewed and debugged to ensure compatibility and reliability.

Focus Areas:
1. Type Compatibility
   - Ensure all method signatures match the base interface
   - Fix type-related errors and inconsistencies
   - Validate return types and parameters

2. Database Operations
   - Room management (create, get, delete)
   - Memory operations (create, search, delete)
   - Participant handling
   - Goal management
   - Relationship tracking

3. Error Handling
   - Implement robust error handling
   - Add appropriate logging
   - Handle edge cases and failures

4. Performance Optimization
   - Connection pooling
   - Query optimization
   - Index management
   - Transaction handling

5. Testing
   - Unit tests for all methods
   - Integration tests
   - Edge case testing
   - Performance benchmarks

Current Issues to Address:
1. Method signature mismatches with base interface
2. Duplicate method implementations
3. Missing or incorrect type definitions
4. Incomplete error handling
5. Performance concerns with large datasets
6. Missing test coverage

AI Instructions:
1. Review each method implementation against the base interface
2. Fix type errors and signature mismatches
3. Implement proper error handling and logging
4. Add missing functionality
5. Create comprehensive tests
6. Document changes and improvements

Expected Deliverables:
1. Fixed and validated adapter implementation
2. Complete test suite
3. Performance optimization recommendations
4. Documentation of changes and improvements
5. Migration guide for any breaking changes

Please proceed by examining each method implementation and addressing any issues found.
