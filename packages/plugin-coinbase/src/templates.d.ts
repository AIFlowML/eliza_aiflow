export declare const chargeTemplate = "\nExtract the following details to create a Coinbase charge:\n- **price** (number): The amount for the charge (e.g., 100.00).\n- **currency** (string): The 3-letter ISO 4217 currency code (e.g., USD, EUR).\n- **type** (string): The pricing type for the charge (e.g., fixed_price, dynamic_price). Assume price type is fixed unless otherwise stated\n- **name** (string): A non-empty name for the charge (e.g., \"The Human Fund\").\n- **description** (string): A non-empty description of the charge (e.g., \"Money For People\").\n\nProvide the values in the following JSON format:\n\n```json\n{\n    \"price\": <number>,\n    \"currency\": \"<currency>\",\n    \"type\": \"<type>\",\n    \"name\": \"<name>\",\n    \"description\": \"<description>\"\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
export declare const getChargeTemplate = "\nExtract the details for a Coinbase charge using the provided charge ID:\n- **charge_id** (string): The unique identifier of the charge (e.g., \"2b364ef7-ad60-4fcd-958b-e550a3c47dc6\").\n\nProvide the charge details in the following JSON format after retrieving the charge details:\n\n```json\n{\n    \"charge_id\": \"<charge_id>\",\n    \"price\": <number>,\n    \"currency\": \"<currency>\",\n    \"type\": \"<type>\",\n    \"name\": \"<name>\",\n    \"description\": \"<description>\",\n    \"status\": \"<status>\",\n    \"created_at\": \"<ISO8601 timestamp>\",\n    \"expires_at\": \"<ISO8601 timestamp>\"\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
export declare const transferTemplate = "\nExtract the following details for processing a mass payout using the Coinbase SDK:\n- **receivingAddresses** (array): A list of wallet addresses receiving the funds.\n- **transferAmount** (number): The amount to transfer to each address (in the smallest unit, e.g., Wei for ETH).\n- **assetId** (string): The asset ID to transfer (e.g., ETH, BTC).\n- **network** (string): The blockchain network to use. Allowed values are:\n    static networks: {\n        readonly BaseSepolia: \"base-sepolia\";\n        readonly BaseMainnet: \"base-mainnet\";\n        readonly EthereumHolesky: \"ethereum-holesky\";\n        readonly EthereumMainnet: \"ethereum-mainnet\";\n        readonly PolygonMainnet: \"polygon-mainnet\";\n        readonly SolanaDevnet: \"solana-devnet\";\n        readonly SolanaMainnet: \"solana-mainnet\";\n        readonly ArbitrumMainnet: \"arbitrum-mainnet\";\n    };\n\nProvide the details in the following JSON format:\n\n```json\n{\n    \"receivingAddresses\": [\"<receiving_address_1>\", \"<receiving_address_2>\"],\n    \"transferAmount\": <amount>,\n    \"assetId\": \"<asset_id>\",\n    \"network\": \"<network>\"\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
export declare const tradeTemplate = "\nExtract the following details for processing a trade using the Coinbase SDK:\n- **network** (string): The blockchain network to use (e.g., base, sol, eth, arb, pol).\n- **amount** (number): The amount to trade (in the smallest unit, e.g., Wei for ETH).\n- **sourceAsset** (string): The asset ID to trade from (must be one of: ETH, SOL, USDC, WETH, GWEI, LAMPORT).\n- **targetAsset** (string): The asset ID to trade to (must be one of: ETH, SOL, USDC, WETH, GWEI, LAMPORT).\n\nEnsure that:\n1. **network** is one of the supported networks: \"base\", \"sol\", \"eth\", \"arb\", or \"pol\".\n2. **sourceAsset** and **targetAsset** are valid assets from the provided list.\n3. **amount** is a positive number.\n\nProvide the details in the following JSON format:\n\n```json\n{\n    \"network\": \"<network>\",\n    \"amount\": <amount>,\n    \"sourceAsset\": \"<source_asset_id>\",\n    \"targetAsset\": \"<target_asset_id>\"\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
export declare const tokenContractTemplate = "\nExtract the following details for deploying a token contract using the Coinbase SDK:\n- **contractType** (string): The type of token contract to deploy (ERC20, ERC721, or ERC1155)\n- **name** (string): The name of the token\n- **symbol** (string): The symbol of the token\n- **network** (string): The blockchain network to deploy on (e.g., base, eth, arb, pol)\n- **baseURI** (string, optional): The base URI for token metadata (required for ERC721 and ERC1155)\n- **totalSupply** (number, optional): The total supply of tokens (only for ERC20)\n\nProvide the details in the following JSON format:\n\n```json\n{\n    \"contractType\": \"<contract_type>\",\n    \"name\": \"<token_name>\",\n    \"symbol\": \"<token_symbol>\",\n    \"network\": \"<network>\",\n    \"baseURI\": \"<base_uri>\",\n    \"totalSupply\": <total_supply>\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
export declare const contractInvocationTemplate = "\nExtract the following details for invoking a smart contract using the Coinbase SDK:\n- **contractAddress** (string): The address of the contract to invoke\n- **method** (string): The method to invoke on the contract\n- **abi** (array): The ABI of the contract\n- **args** (object, optional): The arguments to pass to the contract method\n- **amount** (number, optional): The amount of the asset to send to a payable contract method\n- **assetId** (string, optional): The ID of the asset to send to a payable contract method\n- **network** (string): The blockchain network to use (e.g., base, eth, arb, pol)\n\nProvide the details in the following JSON format:\n\n```json\n{\n    \"contractAddress\": \"<contract_address>\",\n    \"method\": \"<method_name>\",\n    \"abi\": [<contract_abi>],\n    \"args\": {\n        \"<arg_name>\": \"<arg_value>\"\n    },\n    \"amount\": <amount>,\n    \"assetId\": \"<asset_id>\",\n    \"network\": \"<network>\"\n}\n```\n\nExample for invoking a transfer method on an ERC20 token contract:\n\n```json\n{\n    \"contractAddress\": \"0x37f2131ebbc8f97717edc3456879ef56b9f4b97b\",\n    \"method\": \"transfer\",\n    \"abi\": [\n        {\n            \"constant\": false,\n            \"inputs\": [\n                {\n                    \"name\": \"to\",\n                    \"type\": \"address\"\n                },\n                {\n                    \"name\": \"value\",\n                    \"type\": \"uint256\"\n                }\n            ],\n            \"name\": \"transfer\",\n            \"outputs\": [\n                {\n                    \"name\": \"\",\n                    \"type\": \"bool\"\n                }\n            ],\n            \"payable\": false,\n            \"stateMutability\": \"nonpayable\",\n            \"type\": \"function\"\n        }\n    ],\n    \"args\": {\n        \"to\": \"0xRecipientAddressHere\",\n        \"value\": 1000\n    },\n    \"network\": \"eth\"\n}\n```\n\nHere are the recent user messages for context:\n{{recentMessages}}\n";
